/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.control.gui;

import br.control.Beans.Alunos_bean;
import br.control.Controller.Alunos_controller;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import src.email.EnviaEmail;

/**
 *
 * @author joãomarcos
 */
public class EnviaEmailCobranc extends javax.swing.JInternalFrame {

    DefaultTableModel tmEmail = new DefaultTableModel (null, new String [] {"E-mail"});
    List<Alunos_bean> emails;
    ListSelectionModel lsmEmail;
    String email = "";
    public EnviaEmailCobranc() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbEmails = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtCodAlu = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtUserEmail = new javax.swing.JTextField();
        txtUserSenha = new javax.swing.JPasswordField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtCorpoEmail = new javax.swing.JTextArea();
        checkTemplate = new javax.swing.JCheckBox();
        btnEnviar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("E-mail cobrança");

        tbEmails.setModel(tmEmail);
        tbEmails.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        lsmEmail= tbEmails.getSelectionModel();
        lsmEmail.addListSelectionListener(new ListSelectionListener(){
            public void valueChanged(ListSelectionEvent e){
                if (! e.getValueIsAdjusting()){
                    LinhaSelecionada(tbEmails);
                }
            }
        });
        jScrollPane1.setViewportView(tbEmails);

        jLabel1.setText("Código aluno:");

        txtCodAlu.setEnabled(false);

        jLabel2.setText("*E-mail do usuário");

        jLabel3.setText("*Senha do E-mail:");

        jLabel4.setText("*Texto do E-mail:");

        txtCorpoEmail.setColumns(20);
        txtCorpoEmail.setLineWrap(true);
        txtCorpoEmail.setRows(5);
        jScrollPane2.setViewportView(txtCorpoEmail);

        checkTemplate.setText("Usar texto Pronto");
        checkTemplate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkTemplateActionPerformed(evt);
            }
        });

        btnEnviar.setText("Enviar");
        btnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarActionPerformed(evt);
            }
        });

        jLabel5.setText("Lista de E-mails do aluno");

        jLabel6.setForeground(new java.awt.Color(255, 0, 0));
        jLabel6.setText("** Atenção. Apenas E-mails de usuário Gmail, podem disparar E-mails cobrança para o aluno.");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkTemplate)
                                    .addComponent(btnEnviar))
                                .addContainerGap(15, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCodAlu, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtUserEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtUserSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtCodAlu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtUserEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtUserSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(checkTemplate)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEnviar))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checkTemplateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkTemplateActionPerformed
        if(checkTemplate.isSelected()){
            String conteudo = "Iai {Adicionar nome do aluno} tudo bem?\n\nEstive verificando aqui que infelizmente você possui algum débito em relação "
                + "a mensalidade com nossa academia.\nSendo assim, poderia por gentileza entrar em contato conosco para conversar, ou regularizar isso?"
                + "\nÓtimo! Nos vemos logo então. Abraços.\n\nAtenciosamente Extreme Action.";
            txtCorpoEmail.setText(conteudo);
        }else if(!checkTemplate.isSelected()){
            txtCorpoEmail.setText("");
        }
    }//GEN-LAST:event_checkTemplateActionPerformed

    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarActionPerformed
       EnviaEmail mail = new EnviaEmail();
       
               int resp = JOptionPane.showConfirmDialog(this,"Deseja realmente enviar este E-mail cobrança?",
                "Confirmação", JOptionPane.YES_NO_OPTION);
        if(resp == JOptionPane.YES_NO_OPTION){
        if(VerificaCampos()){
            if(email.equals("")){
                JOptionPane.showMessageDialog(this, "Selecione pelo menos um E-mail do atleta para realizar o envio.");
            }else{
           mail.enviarEMail(email, txtCorpoEmail.getText(), "Mensalidades pendentes", txtUserEmail.getText(), txtUserSenha.getText());     
            }
           
       }
        }
    }//GEN-LAST:event_btnEnviarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEnviar;
    private javax.swing.JCheckBox checkTemplate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbEmails;
    private javax.swing.JTextField txtCodAlu;
    private javax.swing.JTextArea txtCorpoEmail;
    private javax.swing.JTextField txtUserEmail;
    private javax.swing.JPasswordField txtUserSenha;
    // End of variables declaration//GEN-END:variables

public void RecebeCod(String cod){
    txtCodAlu.setText(cod);
    Alunos_bean bean = new Alunos_bean();
    Alunos_controller controller = new Alunos_controller();
    
    bean.setAluCod(Integer.valueOf(cod));
        try {
           emails = controller.ConsultaEmailAlu(bean);
           MostraPesquisa();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);   
        }
    
}

public void MostraPesquisa(){
    while(tmEmail.getRowCount()>0){ // enquanto as linhas forem zeradas, pega as linhas zeradas 
            tmEmail.removeRow(0); // e as remove
            }
            if(emails.size() == 0){
        
            JOptionPane.showMessageDialog(this,"Nenhum telefone vinculado ao aluno selecionado");
               }else{
                String[] linha = new String[] {null, null, null, null};
        for( int i=0; i <emails.size(); i++){
           
            tmEmail.addRow(linha);
            tmEmail.setValueAt(emails.get(i).getAluEmail(), i, 0);
            
               }
                }
}


public boolean VerificaCampos(){
    
    if(!txtUserEmail.getText().equals("")&& !txtUserSenha.getText().equals("") && !txtCorpoEmail.getText().equals("") && !txtCodAlu.getText().equals("")){
        return true;
    }else{
        JOptionPane.showMessageDialog(this, "Os campos com * ao lado são de preenchimeto obrigatório.");
        return false;
    }
    
}

private void LinhaSelecionada(JTable tabela){

        if (tbEmails.getSelectedRow() != -1) {
            
            
            email = String.valueOf(emails.get(tabela.getSelectedRow()).getAluEmail());        
            
        }
    }
}
